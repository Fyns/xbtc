#pragma once


namespace xbtc {


#define XBTC_DEFINE_MSGTYPE_NAME(name) const char* const MSGTYPE_##name = #name

XBTC_DEFINE_MSGTYPE_NAME(version);
XBTC_DEFINE_MSGTYPE_NAME(verack);
XBTC_DEFINE_MSGTYPE_NAME(addr);
XBTC_DEFINE_MSGTYPE_NAME(inv);
XBTC_DEFINE_MSGTYPE_NAME(getdata);
XBTC_DEFINE_MSGTYPE_NAME(notfound);
XBTC_DEFINE_MSGTYPE_NAME(getblocks);
XBTC_DEFINE_MSGTYPE_NAME(getheaders);
XBTC_DEFINE_MSGTYPE_NAME(tx);
XBTC_DEFINE_MSGTYPE_NAME(block);
XBTC_DEFINE_MSGTYPE_NAME(headers);
XBTC_DEFINE_MSGTYPE_NAME(getaddr);
XBTC_DEFINE_MSGTYPE_NAME(mempool);
// XBTC_DEFINE_MSGTYPE_NAME(checkorder);
// XBTC_DEFINE_MSGTYPE_NAME(submitorder);
// XBTC_DEFINE_MSGTYPE_NAME(reply);
XBTC_DEFINE_MSGTYPE_NAME(ping);
XBTC_DEFINE_MSGTYPE_NAME(pong);
XBTC_DEFINE_MSGTYPE_NAME(reject);
XBTC_DEFINE_MSGTYPE_NAME(filterload);
XBTC_DEFINE_MSGTYPE_NAME(filteradd);
XBTC_DEFINE_MSGTYPE_NAME(filterclear);
XBTC_DEFINE_MSGTYPE_NAME(merkleblock);
XBTC_DEFINE_MSGTYPE_NAME(alert);
XBTC_DEFINE_MSGTYPE_NAME(sendheaders);
XBTC_DEFINE_MSGTYPE_NAME(feefilter);
XBTC_DEFINE_MSGTYPE_NAME(sendcmpct);
XBTC_DEFINE_MSGTYPE_NAME(cmpctblock);
XBTC_DEFINE_MSGTYPE_NAME(getblocktxn);
XBTC_DEFINE_MSGTYPE_NAME(blocktxn);

#undef XBTC_DEFINE_MSGTYPE_NAME



}
